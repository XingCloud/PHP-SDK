<?php
return array (
  'XAnnotation' => 'util.annotation.XAnnotation',
  'XAnnotationParser' => 'util.annotation.XAnnotationParser',
  'XAOPBatchProxy' => 'module.aop.XAOPBatchProxy',
  'XAOPFactory' => 'module.aop.XAOPFactory',
  'XAOPProxy' => 'module.aop.XAOPProxy',
  'XAspect' => 'module.aop.XAspect',
  'XAuthAspect' => 'module.aop.XAuthAspect',
  'XBatchAspect' => 'module.aop.XBatchAspect',
  'XCacheAspect' => 'module.aop.XCacheAspect',
  'XLockAspect' => 'module.aop.XLockAspect',
  'XMethodAspect' => 'module.aop.XMethodAspect',
  'XProtocolAspect' => 'module.aop.XProtocolAspect',
  'XAbstractCacheAccess' => 'cache.module.XAbstractCacheAccess',
  'XApcCacheAccess' => 'cache.module.XApcCacheAccess',
  'XCacheable' => 'cache.module.XCacheable',
  'XCacheAccess' => 'cache.module.XCacheAccess',
  'XFileCacheAccess' => 'cache.module.XFileCacheAccess',
  'XMemcacheCacheAccess' => 'cache.module.XMemcacheCacheAccess',
  'XConfig' => 'util.config.XConfig',
  'XConfigFactory' => 'util.config.XConfigFactory',
  'XConfigLoader' => 'util.config.XConfigLoader',
  'XDescriptionXMLConfigLoader' => 'util.config.XDescriptionXMLConfigLoader',
  'XINIConfigLoader' => 'util.config.XINIConfigLoader',
  'XPHPConfigLoader' => 'util.config.XPHPConfigLoader',
  'XXMLConfigLoader' => 'util.config.XXMLConfigLoader',
  'XContext' => 'module.context.XContext',
  'XException' => 'module.context.XException',
  'XObject' => 'util.model.XObject',
  'XAbstractEntityCollection' => 'persistence.dao.XAbstractEntityCollection',
  'XActiveRecord' => 'persistence.dao.XActiveRecord',
  'XActiveRecordDAO' => 'persistence.dao.XActiveRecordDAO',
  'XDAO' => 'persistence.dao.XDAO',
  'XEntityCollection' => 'persistence.dao.XEntityCollection',
  'XUnmodifiableActiveRecord' => 'persistence.dao.XUnmodifiableActiveRecord',
  'XContextClosedEvent' => 'module.event.context.XContextClosedEvent',
  'XContextCloseListener' => 'module.event.context.XContextCloseListener',
  'XContextStartedEvent' => 'module.event.context.XContextStartedEvent',
  'XApplicationEvent' => 'module.event.XApplicationEvent',
  'XEvent' => 'module.event.XEvent',
  'XEventContext' => 'module.event.XEventContext',
  'XEventListener' => 'module.event.XEventListener',
  'XEventPublisher' => 'module.event.XEventPublisher',
  'XTypeFilterEvent' => 'module.event.XTypeFilterEvent',
  'XTypeMatchEvent' => 'module.event.XTypeMatchEvent',
  'XAbstractController' => 'module.mvc.controller.XAbstractController',
  'XAbstractGMController' => 'module.mvc.controller.XAbstractGMController',
  'XController' => 'module.mvc.controller.XController',
  'XAbstractFilter' => 'module.mvc.filter.XAbstractFilter',
  'XFilter' => 'module.mvc.filter.XFilter',
  'XFilterChain' => 'module.mvc.filter.XFilterChain',
  'XFilterDispatcher' => 'module.mvc.filter.XFilterDispatcher',
  'XRESTRouteParser' => 'module.mvc.route.XRESTRouteParser',
  'XRouteNotFoundException' => 'module.mvc.route.XRouteNotFoundException',
  'XRouteParser' => 'module.mvc.route.XRouteParser',
  'XRouter' => 'module.mvc.route.XRouter',
  'XAbstractView' => 'module.mvc.view.XAbstractView',
  'XSmartyView' => 'module.mvc.view.XSmartyView',
  'XView' => 'module.mvc.view.XView',
  'CMemDB' => 'persistence.orm.Adapter.CMemDB',
  'KeyValueDBIf' => 'persistence.orm.Adapter.KeyValueDBIf',
  'MySQLDB' => 'persistence.orm.Adapter.MySQLDB',
  'XingCloudDB' => 'persistence.orm.Adapter.XingCloudDB',
  'Condition' => 'persistence.orm.DataProxy.Condition',
  'InvalidConfigure' => 'persistence.orm.DataProxy.InvalidConfigure',
  'InvalidLog' => 'persistence.orm.DataProxy.InvalidLog',
  'InvalidRequest' => 'persistence.orm.DataProxy.InvalidRequest',
  'LogLevel' => 'persistence.orm.DataProxy.LogLevel',
  'DBServiceClient' => 'persistence.orm.DBService.DBServiceClient',
  'DBServiceIf' => 'persistence.orm.DBService.DBServiceIf',
  'DBService_countEntities_args' => 'persistence.orm.DBService.DBService_countEntities_args',
  'DBService_countEntities_result' => 'persistence.orm.DBService.DBService_countEntities_result',
  'DBService_delEntityList_args' => 'persistence.orm.DBService.DBService_delEntityList_args',
  'DBService_delEntityList_result' => 'persistence.orm.DBService.DBService_delEntityList_result',
  'DBService_delEntity_args' => 'persistence.orm.DBService.DBService_delEntity_args',
  'DBService_delEntity_result' => 'persistence.orm.DBService.DBService_delEntity_result',
  'DBService_getEntityList_args' => 'persistence.orm.DBService.DBService_getEntityList_args',
  'DBService_getEntityList_result' => 'persistence.orm.DBService.DBService_getEntityList_result',
  'DBService_getEntity_args' => 'persistence.orm.DBService.DBService_getEntity_args',
  'DBService_getEntity_result' => 'persistence.orm.DBService.DBService_getEntity_result',
  'DBService_putEntityList_args' => 'persistence.orm.DBService.DBService_putEntityList_args',
  'DBService_putEntityList_result' => 'persistence.orm.DBService.DBService_putEntityList_result',
  'DBService_putEntity_args' => 'persistence.orm.DBService.DBService_putEntity_args',
  'DBService_putEntity_result' => 'persistence.orm.DBService.DBService_putEntity_result',
  'DBService_putMultiEntityList_args' => 'persistence.orm.DBService.DBService_putMultiEntityList_args',
  'DBService_putMultiEntityList_result' => 'persistence.orm.DBService.DBService_putMultiEntityList_result',
  'DBService_queryEntityList_args' => 'persistence.orm.DBService.DBService_queryEntityList_args',
  'DBService_queryEntityList_result' => 'persistence.orm.DBService.DBService_queryEntityList_result',
  'DBService_spdtSwitchRebalance_args' => 'persistence.orm.DBService.DBService_spdtSwitchRebalance_args',
  'DBService_spdtSwitchRebalance_result' => 'persistence.orm.DBService.DBService_spdtSwitchRebalance_result',
  'PersistenceSession' => 'persistence.orm.PersistenceSession',
  'Query' => 'persistence.orm.Query',
  'StreamHelper' => 'persistence.orm.StreamHelper',
  'XAbstractProtocol' => 'module.protocol.XAbstractProtocol',
  'XAdminProtocol' => 'module.protocol.XAdminProtocol',
  'XAMFProtocol' => 'module.protocol.XAMFProtocol',
  'XDiscoveryProtocol' => 'module.protocol.XDiscoveryProtocol',
  'XFileProtocol' => 'module.protocol.XFileProtocol',
  'XProtocol' => 'module.protocol.XProtocol',
  'XProtocolFactory' => 'module.protocol.XProtocolFactory',
  'XRESTProtocol' => 'module.protocol.XRESTProtocol',
  'XRPCProtocol' => 'module.protocol.XRPCProtocol',
  'XStatusProtocol' => 'module.protocol.XStatusProtocol',
  'XAbstractRequest' => 'module.request.XAbstractRequest',
  'XRequest' => 'module.request.XRequest',
  'XResponse' => 'module.response.XResponse',
  'XAdminAuthenticationProvider' => 'module.security.XAdminAuthenticationProvider',
  'XAuthentication' => 'module.security.XAuthentication',
  'XAuthenticationException' => 'module.security.XAuthenticationException',
  'XAuthenticationProvider' => 'module.security.XAuthenticationProvider',
  'XHttpAuthenticationProvider' => 'module.security.XHttpAuthenticationProvider',
  'XActionDiscoveryService' => 'module.service.discovery.XActionDiscoveryService',
  'XAdminDiscoveryService' => 'module.service.discovery.XAdminDiscoveryService',
  'XAMFDiscoveryService' => 'module.service.discovery.XAMFDiscoveryService',
  'XDiscoveryService' => 'module.service.discovery.XDiscoveryService',
  'XRPCDiscoveryService' => 'module.service.discovery.XRPCDiscoveryService',
  'XServiceFinishedEvent' => 'module.service.event.XServiceFinishedEvent',
  'XServiceStartedEvent' => 'module.service.event.XServiceStartedEvent',
  'XServiceStartListener' => 'module.service.listener.XServiceStartListener',
  'XAbstractResult' => 'module.service.result.XAbstractResult',
  'XFileResult' => 'module.service.result.XFileResult',
  'XHeaderResult' => 'module.service.result.XHeaderResult',
  'XMultiResult' => 'module.service.result.XMultiResult',
  'XResult' => 'module.service.result.XResult',
  'XServiceResult' => 'module.service.result.XServiceResult',
  'XAdminStatusService' => 'module.service.status.XAdminStatusService',
  'XStatusService' => 'module.service.status.XStatusService',
  'XAbstractService' => 'module.service.XAbstractService',
  'XService' => 'module.service.XService',
  'XServiceAnnotation' => 'module.service.XServiceAnnotation',
  'XServiceContext' => 'module.service.XServiceContext',
  'XServiceRequest' => 'module.service.XServiceRequest',
  'XServiceResponse' => 'module.service.XServiceResponse',
  'XAbstractStream' => 'module.stream.XAbstractStream',
  'XAMFStream' => 'module.stream.XAMFStream',
  'XFileStream' => 'module.stream.XFileStream',
  'XJSONStream' => 'module.stream.XJSONStream',
  'XRPCStreamWrapper' => 'module.stream.XRPCStreamWrapper',
  'XStream' => 'module.stream.XStream',
  'XXMLRPCStream' => 'module.stream.XXMLRPCStream',
  'XXMLStream' => 'module.stream.XXMLStream',
  'BaseActionTestCase' => 'module.test.BaseActionTestCase',
  'BaseServiceTestCase' => 'module.test.BaseServiceTestCase',
  'TestCaseManager' => 'module.test.TestCaseManager',
  'XAbstractActionTestCase' => 'module.test.XAbstractActionTestCase',
  'XAbstractJSONRPCActionTestCase' => 'module.test.XAbstractJSONRPCActionTestCase',
  'XAbstractJSONRPCServiceTestCase' => 'module.test.XAbstractJSONRPCServiceTestCase',
  'XAbstractRESTActionTestCase' => 'module.test.XAbstractRESTActionTestCase',
  'XAbstractRESTServiceTestCase' => 'module.test.XAbstractRESTServiceTestCase',
  'XAbstractServiceTestCase' => 'module.test.XAbstractServiceTestCase',
  'XAbstractTestCase' => 'module.test.XAbstractTestCase',
  'XAssert' => 'module.test.XAssert',
  'XAssertFailedException' => 'module.test.XAssertFailedException',
  'XJSONRPCActionTestCase' => 'module.test.XJSONRPCActionTestCase',
  'XJSONRPCServiceTestCase' => 'module.test.XJSONRPCServiceTestCase',
  'XRESTActionTestCase' => 'module.test.XRESTActionTestCase',
  'XRESTServiceTestCase' => 'module.test.XRESTServiceTestCase',
  'XTestCase' => 'module.test.XTestCase',
  'XServletCookie' => 'util.http.XServletCookie',
  'XServletRequest' => 'util.http.XServletRequest',
  'XServletResponse' => 'util.http.XServletResponse',
  'XServletSession' => 'util.http.XServletSession',
  'XAbstractInvoker' => 'module.util.invoker.XAbstractInvoker',
  'XActionInvoker' => 'module.util.invoker.XActionInvoker',
  'XInvoker' => 'module.util.invoker.XInvoker',
  'XServiceInvoker' => 'module.util.invoker.XServiceInvoker',
  'XFile' => 'util.io.XFile',
  'XFileAppender' => 'util.io.XFileAppender',
  'XFileReader' => 'util.io.XFileReader',
  'XFileWriter' => 'util.io.XFileWriter',
  'XJSONUtil' => 'util.json.XJSONUtil',
  'XCacheLocker' => 'module.util.lock.XCacheLocker',
  'XLock' => 'module.util.lock.XLock',
  'XLockable' => 'module.util.lock.XLockable',
  'XLocker' => 'module.util.lock.XLocker',
  'XAbstractLoggerAppender' => 'module.util.logger.appender.XAbstractLoggerAppender',
  'XConsoleLoggerAppender' => 'module.util.logger.appender.XConsoleLoggerAppender',
  'XDailyFileLoggerAppender' => 'module.util.logger.appender.XDailyFileLoggerAppender',
  'XFileLoggerAppender' => 'module.util.logger.appender.XFileLoggerAppender',
  'XLoggerAppender' => 'module.util.logger.appender.XLoggerAppender',
  'XLoggerLayout' => 'module.util.logger.layout.XLoggerLayout',
  'XSimpleLoggerLayout' => 'module.util.logger.layout.XSimpleLoggerLayout',
  'XExceptionEvent' => 'module.util.logger.XExceptionEvent',
  'XingCloudLogger' => 'module.util.logger.XingCloudLogger',
  'XLogger' => 'module.util.logger.XLogger',
  'XLoggerListener' => 'module.util.logger.XLoggerListener',
  'XLoggingEvent' => 'module.util.logger.XLoggingEvent',
  'XAbstractSession' => 'module.util.session.XAbstractSession',
  'XHttpSession' => 'module.util.session.XHttpSession',
  'XSession' => 'module.util.session.XSession',
  'XSessionEntity' => 'module.util.session.XSessionEntity',
  'XMemcacheHttpSession' => 'module.util.session.XMemcacheHttpSession',
  'XPersistenceHttpSession' => 'module.util.session.XPersistenceHttpSession',
  'LogContainer' => 'statistics.LogContainer',
  'LogService' => 'statistics.LogService',
  'StatisticsManager' => 'statistics.StatisticsManager',
  'XStatisticsListener' => 'module.util.statistics.XStatisticsListener',
  'XKeyGenerator' => 'util.XKeyGenerator',
  'XXMLRPCUtil' => 'util.xml.XXMLRPCUtil',
  'XXMLUtil' => 'util.xml.XXMLUtil',
  'XActionFinishedEvent' => 'service.action.event.XActionFinishedEvent',
  'XActionStartedEvent' => 'service.action.event.XActionStartedEvent',
  'XAbstractAction' => 'service.action.XAbstractAction',
  'XAction' => 'service.action.XAction',
  'XActionContext' => 'service.action.XActionContext',
  'XActionRequest' => 'service.action.XActionRequest',
  'XActionResult' => 'service.action.XActionResult',
  'ActionService' => 'service.action.service.ActionService',
  'IndexAdminService' => 'service.admin.service.IndexAdminService',
  'ItemAdminService' => 'service.admin.service.ItemAdminService',
  'UserAdminService' => 'service.admin.service.UserAdminService',
  'BuyAuditChange' => 'service.change.BuyAuditChange',
  'AddAuditChange' => 'service.change.lib.AddAuditChange',
  'XAuditChangeFinishedEvent' => 'service.change.lib.event.XAuditChangeFinishedEvent',
  'XAuditChangeStartedEvent' => 'service.change.lib.event.XAuditChangeStartedEvent',
  'RemoveAuditChange' => 'service.change.lib.RemoveAuditChange',
  'UpdateAuditChange' => 'service.change.lib.UpdateAuditChange',
  'XAbstractChange' => 'service.change.lib.XAbstractChange',
  'XAbstractValidator' => 'service.change.lib.XAbstractValidator',
  'XChange' => 'service.change.lib.XChange',
  'XChangeConfigManager' => 'service.change.lib.XChangeConfigManager',
  'XChangeContext' => 'service.change.lib.XChangeContext',
  'XChangeRequest' => 'service.change.lib.XChangeRequest',
  'XChangeResult' => 'service.change.lib.XChangeResult',
  'XValidator' => 'service.change.lib.XValidator',
  'SellAuditChange' => 'service.change.SellAuditChange',
  'ChangeService' => 'service.change.service.ChangeService',
  'AbstractItem' => 'service.item.AbstractItem',
  'Item' => 'service.item.Item',
  'ItemGroup' => 'service.item.ItemGroup',
  'ItemSpec' => 'service.item.ItemSpec',
  'ItemSpecManager' => 'service.item.ItemSpecManager',
  'OwnedItem' => 'service.user.item.OwnedItem',
  'OwnedItemCollection' => 'service.user.item.OwnedItemCollection',
  'UnmodifiableOwnedItem' => 'service.user.item.UnmodifiableOwnedItem',
  'ItemSpecService' => 'service.item.service.itemService',
  'LanguageManager' => 'service.locale.lib.LanguageManager',
  'FontService' => 'service.locale.service.FontService',
  'LanguageService' => 'service.locale.service.LanguageService',
  'LocaleService' => 'service.locale.service.LocaleService',
  'StyleService' => 'service.locale.service.StyleService',
  'TextService' => 'service.locale.service.TextService',
  'ActiveQuest' => 'service.quest.ActiveQuest',
  'ActiveQuestElement' => 'service.quest.ActiveQuestElement',
  'ActiveQuestManager' => 'service.quest.ActiveQuestManager',
  'Quest' => 'service.quest.Quest',
  'QuestDispatcher' => 'service.quest.QuestDispatcher',
  'QuestElement' => 'service.quest.QuestElement',
  'QuestGroup' => 'service.quest.QuestGroup',
  'QuestSpecManager' => 'service.quest.QuestSpecManager',
  'QuestUpdateListener' => 'service.quest.QuestUpdateListener',
  'UserActiveQuest' => 'service.quest.UserActiveQuest',
  'QuestService' => 'service.quest.service.QuestService',
  'Tutorial' => 'service.tutorial.Tutorial',
  'TutorialFactory' => 'service.tutorial.TutorialFactory',
  'TutorialStep' => 'service.tutorial.TutorialStep',
  'TutorialService' => 'service.tutorial.service.TutorialService',
  'AbstractAccount' => 'service.user.AbstractAccount',
  'AbstractUserProfile' => 'service.user.AbstractUserProfile',
  'Passport' => 'service.user.Passport',
  'PlatformProfile' => 'service.user.PlatformProfile',
  'PlatformUser' => 'service.user.PlatformUser',
  'User' => 'service.user.User',
  'UserAccount' => 'service.user.UserAccount',
  'UserFactory' => 'service.user.UserFactory',
  'UserLoadHandler' => 'service.user.UserLoadHandler',
  'UserLoginHandler' => 'service.user.UserLoginHandler',
  'UserProfile' => 'service.user.UserProfile',
  'UserRegisterHandler' => 'service.user.UserRegisterHandler',
  'UserStatus' => 'service.user.UserStatus',
  'UserService' => 'service.user.service.UserService',
  'XApp' => 'app.XApp',
  'XAppConfig' => 'app.XAppConfig',
  'XAppConfigFactory' => 'app.XAppConfigFactory',
  'XAppFactoy' => 'app.XAppFaotory',
  'XingcloudSDK' => 'app.XingcloudSDK',
  'XRuntime' => 'app.XRuntime',
)
?>